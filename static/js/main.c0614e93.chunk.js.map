{"version":3,"sources":["context/RecordContext.js","components/Item.js","components/List.js","utils/contentful.js","context/SearchContext.js","components/Detail.js","containers/Main.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["RecordContext","createContext","RecordProvider","props","useState","selectedRecord","setSelectedRecord","Provider","value","children","Item","record","useContext","Card","CardHeader","title","titleTypographyProps","color","subheader","moment","createdAt","format","subheaderTypographyProps","variant","CardActionArea","onClick","CardMedia","style","height","paddingTop","image","CardContent","Typography","gutterBottom","component","artist","releasedAt","studio","genre","utc","duration","label","producer","CardActions","Button","size","startIcon","href","listenUrl","target","buyItUrl","List","className","Grid","container","spacing","records","map","item","xs","sm","lg","xl","key","id","client","contentful","space","accessToken","getRecords","query","getEntries","then","result","items","fields","sys","file","url","tracklist","track","catch","err","console","error","SearchContext","SearchProvider","search","setSearch","Detail","open","setOpen","handleClose","margin","whiteSpace","description","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","scope","textTransform","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","dividers","width","Main","setRecords","fetchRecords","useCallback","a","content_type","entries","log","useEffect","Slide","direction","in","mountOnEnter","unmountOnExit","timeout","enter","exit","useStyles","makeStyles","grow","flexGrow","position","borderRadius","backgroundColor","marginRight","marginLeft","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","NavBar","classes","AppBar","Toolbar","noWrap","InputBase","placeholder","root","input","inputProps","onChange","event","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c0614e93.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const RecordContext = createContext();\n\nconst RecordProvider = props => {\n  const [selectedRecord, setSelectedRecord] = useState(null);\n\n  return (\n    <RecordContext.Provider value={[selectedRecord, setSelectedRecord]}>\n      <>{props.children}</>\n    </RecordContext.Provider>\n  );\n};\n\nRecordProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default RecordProvider;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  CardHeader,\n} from '@material-ui/core';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport moment from 'moment';\n\nimport { RecordContext } from '../context/RecordContext';\n\nconst Item = ({ record }) => {\n  const [, setSelectedRecord] = useContext(RecordContext);\n\n  return (\n    <Card>\n      <CardHeader\n        title={record.title}\n        titleTypographyProps={{ color: 'primary' }}\n        subheader={`Added: ${moment(record.createdAt).format('LL')}`}\n        subheaderTypographyProps={{ variant: 'subtitle2' }}\n      />\n\n      <CardActionArea onClick={() => setSelectedRecord(record)}>\n        <CardMedia\n          style={{\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n          }}\n          image={record.image}\n          title={record.title}\n        />\n\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            color=\"secondary\"\n            component=\"h4\"\n          >\n            {record.artist}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n            {`Released: `}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            {moment(record.releasedAt).format('LL')}\n          </Typography>\n\n          <br />\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n            {`Studio: `}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            {record.studio}\n          </Typography>\n\n          <br />\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n            {`Genre: `}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            {record.genre}\n          </Typography>\n\n          <br />\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n            {`Length: `}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            {moment.utc(record.duration).format('HH:mm:ss')}\n          </Typography>\n\n          <br />\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n            {`Label: `}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            {record.label}\n          </Typography>\n\n          <br />\n\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n            {`Producer: `}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            {record.producer}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n\n      <CardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          startIcon={<HeadsetIcon />}\n          href={record.listenUrl}\n          target=\"_blank\"\n        >\n          Listen\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"secondary\"\n          startIcon={<ShoppingCartIcon />}\n          href={record.buyItUrl}\n          target=\"_blank\"\n        >\n          Buy it\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nItem.propTypes = {\n  record: PropTypes.shape({\n    artist: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    studio: PropTypes.string,\n    producer: PropTypes.string,\n    label: PropTypes.string,\n    genre: PropTypes.string,\n    releasedAt: PropTypes.string,\n    duration: PropTypes.number,\n    image: PropTypes.string,\n    createdAt: PropTypes.string,\n    listenUrl: PropTypes.string,\n    buyItUrl: PropTypes.string,\n  }),\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Item from './Item';\n\nconst List = props => (\n  <div className=\"App-list\">\n    <Grid container spacing={8}>\n      {props.records.map(record => (\n        <Grid item xs={12} sm={6} lg={4} xl={3} key={record.id}>\n          <Item record={record} />\n        </Grid>\n      ))}\n    </Grid>\n  </div>\n);\n\nList.propTypes = {\n  records: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n};\n\nexport default List;\n","import * as contentful from 'contentful';\n\nconst SPACE_ID = 'srlpekq85luo';\nconst ACCESS_TOKEN = 'evMFF1eK--2PX6Qqrlq8glrKOurVH1pdvaI-FRgmufU';\n\nexport const client = contentful.createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN,\n});\n\nexport function getRecords(query) {\n  return client\n    .getEntries(query)\n    .then(result => result.items)\n    .then(items => dataTransformer(items))\n    .catch(err => {\n      console.error(err);\n      return [];\n    });\n}\n\nfunction dataTransformer(data) {\n  return data.map(({ fields, sys }) => ({\n    ...fields,\n    image: fields.image.fields.file.url,\n    id: sys.id,\n    createdAt: sys.createdAt,\n    tracklist: fields.tracklist.map(track => ({\n      ...track.fields,\n      id: track.sys.id,\n    })),\n  }));\n}\n","import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchContext = createContext();\n\nconst SearchProvider = props => {\n  const [search, setSearch] = useState('');\n\n  return (\n    <SearchContext.Provider value={[search, setSearch]}>\n      <>{props.children}</>\n    </SearchContext.Provider>\n  );\n};\n\nSearchProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default SearchProvider;\n","import React, { useContext, useState } from 'react';\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  CardHeader,\n  Grid,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  CardActionArea,\n} from '@material-ui/core';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport moment from 'moment';\nimport { RecordContext } from '../context/RecordContext';\n\nconst Detail = () => {\n  const [open, setOpen] = useState(false);\n  const [record] = useContext(RecordContext);\n\n  const handleOpenDialog = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Grid container spacing={8}>\n        <Grid item xs={12} sm={6} lg={4} xl={4}>\n          <Card>\n            <CardHeader\n              title={record.title}\n              titleTypographyProps={{ color: 'primary' }}\n            />\n\n            <hr style={{ margin: '0px 16px' }} />\n\n            <CardContent>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n                // align=\"justify\"\n                style={{ whiteSpace: 'pre-line' }}\n              >\n                {record.description}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} lg={4} xl={4}>\n          <Card>\n            <CardHeader\n              title={record.title}\n              titleTypographyProps={{ color: 'primary' }}\n              subheader={`Added: ${moment(record.createdAt).format('LL')}`}\n              subheaderTypographyProps={{ variant: 'subtitle2' }}\n            />\n\n            <CardActionArea onClick={() => handleOpenDialog()}>\n              <CardMedia\n                style={{\n                  height: 0,\n                  paddingTop: '56.25%', // 16:9\n                }}\n                image={record.image}\n                title={record.title}\n              />\n            </CardActionArea>\n\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"secondary\"\n                component=\"h4\"\n              >\n                {record.artist}\n              </Typography>\n\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n                {`Released: `}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"span\"\n              >\n                {moment(record.releasedAt).format('LL')}\n              </Typography>\n\n              <br />\n\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n                {`Studio: `}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"span\"\n              >\n                {record.studio}\n              </Typography>\n\n              <br />\n\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n                {`Genre: `}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"span\"\n              >\n                {record.genre}\n              </Typography>\n\n              <br />\n\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n                {`Length: `}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"span\"\n              >\n                {moment.utc(record.duration).format('HH:mm:ss')}\n              </Typography>\n\n              <br />\n\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n                {`Label: `}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"span\"\n              >\n                {record.label}\n              </Typography>\n\n              <br />\n\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\">\n                {`Producer: `}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"span\"\n              >\n                {record.producer}\n              </Typography>\n            </CardContent>\n\n            <CardActions>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                startIcon={<HeadsetIcon />}\n                href={record.listenUrl}\n                target=\"_blank\"\n              >\n                Listen\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"secondary\"\n                startIcon={<ShoppingCartIcon />}\n                href={record.buyItUrl}\n                target=\"_blank\"\n              >\n                Buy it\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} lg={4} xl={4}>\n          <Card>\n            <CardHeader\n              title={`Singles from ${record.title}`}\n              titleTypographyProps={{ color: 'primary' }}\n            />\n\n            <CardContent>\n              <TableContainer>\n                <Table aria-label=\"tracklist\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Track</TableCell>\n                      <TableCell>Length</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {record.tracklist.map(track => (\n                      <TableRow key={track.id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            startIcon={<HeadsetIcon />}\n                            href={track.listenUrl}\n                            target=\"_blank\"\n                            style={{ textTransform: 'none' }}\n                          >\n                            {track.title}\n                          </Button>\n                        </TableCell>\n                        <TableCell>\n                          {moment.utc(track.duration).format('HH:mm:ss')}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"record-cover-dialog\"\n        open={open}\n      >\n        <DialogTitle id=\"record-cover-dialog\" onClose={handleClose}>\n          {record.title}\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <Grid container>\n            <Grid item xs={12} sm={12} lg={12} xl={12}>\n              <Card>\n                <CardActionArea href={record.image} target=\"_blank\">\n                  <CardMedia\n                    style={{ width: '60ch', height: '60ch' }}\n                    image={record.image}\n                    title=\"Contemplative Reptile\"\n                  />\n                </CardActionArea>\n              </Card>\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Detail;\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { Slide } from '@material-ui/core';\nimport List from '../components/List';\nimport { getRecords } from '../utils/contentful';\nimport { SearchContext } from '../context/SearchContext';\nimport { RecordContext } from '../context/RecordContext';\nimport Detail from '../components/Detail';\n\nfunction Main() {\n  const [records, setRecords] = useState([]);\n  const [search] = useContext(SearchContext);\n  const [selectedRecord] = useContext(RecordContext);\n\n  const fetchRecords = useCallback(async () => {\n    const entries = await getRecords({\n      content_type: 'records',\n      'fields.title[match]': search,\n    });\n\n    console.log(\n      `%cCourses fetched using... \"${search}\":`,\n      'background: #ccc; color: #444;',\n      entries,\n    );\n\n    setRecords(entries);\n  }, [search]);\n\n  useEffect(() => {\n    fetchRecords();\n  }, [fetchRecords]);\n\n  return (\n    <div className=\"App-main\">\n      {!selectedRecord ? (\n        <Slide\n          direction=\"right\"\n          in={!selectedRecord}\n          mountOnEnter\n          unmountOnExit\n          timeout={{ enter: 250, exit: 250 }}\n        >\n          <div>\n            <List records={records} />\n          </div>\n        </Slide>\n      ) : null}\n\n      {selectedRecord ? (\n        <Slide\n          direction=\"left\"\n          in={selectedRecord !== null}\n          mountOnEnter\n          unmountOnExit\n          timeout={{ enter: 250, exit: 250 }}\n        >\n          <div>\n            <Detail />\n          </div>\n        </Slide>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { useContext } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  InputBase,\n  Button,\n  makeStyles,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { SearchContext } from '../context/SearchContext';\nimport { RecordContext } from '../context/RecordContext';\n\nconst useStyles = makeStyles(() => ({\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.25)',\n    },\n    marginRight: 48,\n    marginLeft: 48,\n    width: '36ch',\n  },\n  searchIcon: {\n    padding: '0px 16px',\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: '8px 8px 8px 0px',\n    paddingLeft: 'calc(1em + 32px)',\n    transition: 'width 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    width: '100%',\n  },\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n\n  const [, setSearch] = useContext(SearchContext);\n  const [, setSelectedRecord] = useContext(RecordContext);\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Button color=\"inherit\" onClick={() => setSelectedRecord(null)}>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Itca Fepade / ReactJs / Material-UI / Contentful 2020\n            </Typography>\n          </Button>\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={event => setSearch(event.target.value || '')}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nimport './App.css';\nimport Main from './containers/Main';\nimport NavBar from './components/NavBar';\n\nimport SearchProvider from './context/SearchContext';\nimport RecordProvider from './context/RecordContext';\n\nfunction App() {\n  return (\n    <SearchProvider>\n      <RecordProvider>\n        <NavBar />\n        <Main />\n      </RecordProvider>\n    </SearchProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}